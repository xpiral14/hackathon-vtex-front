{"ast":null,"code":"var _jsxFileName = \"/home/junior/Documentos/Projetos/hackathon-vtex-front/desafio-vtex/src/pages/Suppliers/index.tsx\";\nimport React, { useCallback, useRef } from 'react';\nimport { Container, Background } from './styles';\nimport * as Yup from 'yup';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport LeftMenu from '../../components/LeftMenu';\nimport Button from '../../components/Button';\n\nconst Suppliers = () => {\n  const formRef = useRef(null);\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        email: Yup.string().required('E-Mail Obrigatório').email('Digite um E-mail válido'),\n        password: Yup.string().required('Senha obrigatória')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n    } catch (err) {\n      var _formRef$current2;\n\n      console.log(err);\n      const errors = getValidationErrors(err);\n      (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LeftMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 18\n    }\n  }, \"Editar Perfil\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, \"sss\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }, \"Atualizar\")))));\n};\n\nexport default Suppliers;","map":{"version":3,"sources":["/home/junior/Documentos/Projetos/hackathon-vtex-front/desafio-vtex/src/pages/Suppliers/index.tsx"],"names":["React","useCallback","useRef","Container","Background","Yup","getValidationErrors","LeftMenu","Button","Suppliers","formRef","handleSubmit","data","current","setErrors","schema","object","shape","email","string","required","password","validate","abortEarly","err","console","log","errors"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,QAA2C,OAA3C;AAEA,SAASC,SAAT,EAA6BC,UAA7B,QAA8C,UAA9C;AAGA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,mBAAP,MAAgC,iCAAhC;AAMA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,SAAmB,GAAG,MAAM;AAGhC,QAAMC,OAAO,GAAGR,MAAM,CAAc,IAAd,CAAtB;AAEA,QAAMS,YAAY,GAAGV,WAAW,CAAC,MAAOW,IAAP,IAAyB;AACxD,QAAI;AAAA;;AAEF,0BAAAF,OAAO,CAACG,OAAR,sEAAiBC,SAAjB,CAA2B,EAA3B;AACA,YAAMC,MAAM,GAAGV,GAAG,CAACW,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,QAAAA,KAAK,EAAEb,GAAG,CAACc,MAAJ,GAAaC,QAAb,CAAsB,oBAAtB,EAA4CF,KAA5C,CAAkD,yBAAlD,CADyB;AAEhCG,QAAAA,QAAQ,EAAEhB,GAAG,CAACc,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB;AAFsB,OAAnB,CAAf;AAIA,YAAML,MAAM,CAACO,QAAP,CAAgBV,IAAhB,EAAsB;AAC1BW,QAAAA,UAAU,EAAE;AADc,OAAtB,CAAN;AAMD,KAbD,CAaE,OAAOC,GAAP,EAAY;AAAA;;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEA,YAAMG,MAAM,GAAGrB,mBAAmB,CAACkB,GAAD,CAAlC;AACA,2BAAAd,OAAO,CAACG,OAAR,wEAAiBC,SAAjB,CAA2Ba,MAA3B;AACD;AACF,GApB+B,EAoB7B,EApB6B,CAAhC;AAuBA,sBACE,uDACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,uDAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHH,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANJ,eAUI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVJ,CADJ,CAFF,CADJ,CADF;AAuBD,CAnDD;;AAqDA,eAAelB,SAAf","sourcesContent":["import React, { useCallback, useRef } from 'react';\n\nimport { Container, Content, Background} from './styles';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport getValidationErrors from '../../utils/getValidationErrors';\n\n\n\n\n\nimport LeftMenu from '../../components/LeftMenu'\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nconst Suppliers: React.FC = () => {\n\n\n  const formRef = useRef<FormHandles>(null);\n\n  const handleSubmit = useCallback(async (data : object) => {\n    try {\n\n      formRef.current?.setErrors({});\n      const schema = Yup.object().shape({\n        email: Yup.string().required('E-Mail Obrigatório').email('Digite um E-mail válido'),\n        password: Yup.string().required('Senha obrigatória')\n      });\n      await schema.validate(data, {\n        abortEarly: false,\n      });  \n\n\n      \n    } catch (err) {\n      console.log(err);\n\n      const errors = getValidationErrors(err);\n      formRef.current?.setErrors(errors);\n    }\n  }, []);\n\n\n  return (\n    <>\n        <Container>\n          <LeftMenu />\n          <Background>\n              <>\n               \n\n                 <h1>Editar Perfil</h1>\n\n\n                  <div>\n                   sss\n                  </div>\n\n                  <Button type=\"submit\">Atualizar</Button>\n              </>\n          </Background>\n            \n\n        </Container>\n    </>\n  );\n};\n\nexport default Suppliers;\n"]},"metadata":{},"sourceType":"module"}