{"ast":null,"code":"var _jsxFileName = \"/home/junior/Documentos/Projetos/hackathon-vtex-front/desafio-vtex/src/pages/Profile/index.tsx\";\nimport React, { useCallback, useRef } from 'react';\nimport { Container, Background } from './styles';\nimport * as Yup from 'yup';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport LeftMenu from '../../components/LeftMenu';\n\n// import Button from '../../components/Button';\nconst Profile = () => {\n  const formRef = useRef(null);\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        email: Yup.string().required('E-Mail Obrigatório').email('Digite um E-mail válido'),\n        password: Yup.string().required('Senha obrigatória')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n    } catch (err) {\n      var _formRef$current2;\n\n      console.log(err);\n      const errors = getValidationErrors(err);\n      (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LeftMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Profile;","map":{"version":3,"sources":["/home/junior/Documentos/Projetos/hackathon-vtex-front/desafio-vtex/src/pages/Profile/index.tsx"],"names":["React","useCallback","useRef","Container","Background","Yup","getValidationErrors","LeftMenu","Profile","formRef","handleSubmit","data","current","setErrors","schema","object","shape","email","string","required","password","validate","abortEarly","err","console","log","errors"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,QAA2C,OAA3C;AAEA,SAASC,SAAT,EAA6BC,UAA7B,QAA8C,UAA9C;AAGA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,mBAAP,MAAgC,iCAAhC;AAMA,OAAOC,QAAP,MAAqB,2BAArB;;AAEA;AAEA,MAAMC,OAAiB,GAAG,MAAM;AAG9B,QAAMC,OAAO,GAAGP,MAAM,CAAc,IAAd,CAAtB;AAEA,QAAMQ,YAAY,GAAGT,WAAW,CAAC,MAAOU,IAAP,IAAyB;AACxD,QAAI;AAAA;;AAEF,0BAAAF,OAAO,CAACG,OAAR,sEAAiBC,SAAjB,CAA2B,EAA3B;AACA,YAAMC,MAAM,GAAGT,GAAG,CAACU,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,QAAAA,KAAK,EAAEZ,GAAG,CAACa,MAAJ,GAAaC,QAAb,CAAsB,oBAAtB,EAA4CF,KAA5C,CAAkD,yBAAlD,CADyB;AAEhCG,QAAAA,QAAQ,EAAEf,GAAG,CAACa,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB;AAFsB,OAAnB,CAAf;AAIA,YAAML,MAAM,CAACO,QAAP,CAAgBV,IAAhB,EAAsB;AAC1BW,QAAAA,UAAU,EAAE;AADc,OAAtB,CAAN;AAMD,KAbD,CAaE,OAAOC,GAAP,EAAY;AAAA;;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEA,YAAMG,MAAM,GAAGpB,mBAAmB,CAACiB,GAAD,CAAlC;AACA,2BAAAd,OAAO,CAACG,OAAR,wEAAiBC,SAAjB,CAA2Ba,MAA3B;AACD;AACF,GApB+B,EAoB7B,EApB6B,CAAhC;AAuBA,sBACE,uDACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAFF,CADJ,CADF;AAeD,CA3CD;;AA6CA,eAAelB,OAAf","sourcesContent":["import React, { useCallback, useRef } from 'react';\n\nimport { Container, Content, Background} from './styles';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport getValidationErrors from '../../utils/getValidationErrors';\n\n\n\n\n\nimport LeftMenu from '../../components/LeftMenu'\nimport Input from '../../components/Input';\n// import Button from '../../components/Button';\n\nconst Profile: React.FC = () => {\n\n\n  const formRef = useRef<FormHandles>(null);\n\n  const handleSubmit = useCallback(async (data : object) => {\n    try {\n\n      formRef.current?.setErrors({});\n      const schema = Yup.object().shape({\n        email: Yup.string().required('E-Mail Obrigatório').email('Digite um E-mail válido'),\n        password: Yup.string().required('Senha obrigatória')\n      });\n      await schema.validate(data, {\n        abortEarly: false,\n      });  \n\n\n      \n    } catch (err) {\n      console.log(err);\n\n      const errors = getValidationErrors(err);\n      formRef.current?.setErrors(errors);\n    }\n  }, []);\n\n\n  return (\n    <>\n        <Container>\n          <LeftMenu />\n          <Background>\n            <input type=\"text\"/>\n            <input type=\"text\"/>\n            <input type=\"text\"/>\n            <input type=\"text\"/>\n          </Background>\n            \n\n        </Container>\n    </>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}